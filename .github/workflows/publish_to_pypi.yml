name: Publish Python 🐍 distribution 📦 to GitHub and PyPI

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build distribution 📦
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: update pip & install custom dependencies
      run: |
        python -m pip install --upgrade pip
        brew update
        brew uninstall cmake
        sh scripts/shell/m2chip_install.sh
        brew install labstreaminglayer/tap/lsl
    - name: install dependencies
      run: |
        make dev-install
    - name: Build a binary wheel and a source tarball
      run: make build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: prodpypi
      url: https://pypi.org/p/bcipy
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        gh release create \
        "v${VERSION}" \
        --repo "$GITHUB_REPOSITORY" \
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        gh release upload \
        "v${VERSION}" dist/** \
        --repo "$GITHUB_REPOSITORY"
